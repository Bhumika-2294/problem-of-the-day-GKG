class Solution {
    void dfs(int node, vector<int> adj[], vector<bool> &vis, vector<int> &topo) {
        vis[node] = 1;
        for(auto &it : adj[node]) {
            if(!vis[it]) dfs(it, adj, vis, topo);
        }
        topo.push_back(node);
    }
  public:
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        // code here
        vector<int> adj[V], topo;
        for(auto &edge : edges) {
            adj[edge[0]].push_back(edge[1]);
        }
        vector<bool> vis(V);
        for(int i = 0; i < V; ++i) {
            if(!vis[i]) dfs(i, adj, vis, topo);
        }
        reverse(topo.begin(), topo.end());
        return topo;
    }
};
